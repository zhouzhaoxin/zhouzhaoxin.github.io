<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Missyo</title>
    <description>学习·生活·反思</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 02 Apr 2020 10:03:27 +0800</pubDate>
    <lastBuildDate>Thu, 02 Apr 2020 10:03:27 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>布隆过滤器</title>
        <description>&lt;p&gt;假设你正在研发一个游戏，这个游戏有登录的功能，在登录的时候用户输入用户名，然后我们后台需要对用户名是否存在进行判断。&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:rgb(250,127,88)&quot;&gt;想象一下，我们该如何判断用户名是否已经被注册过了呢？&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;你可能会想到以下解决方案&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:rgb(250,127,88)&quot;&gt;&lt;strong&gt;第一种&lt;/strong&gt;&lt;/span&gt;：暴力查询，用户输入用户名，传到后台，后台查询mysql数据库，将查询结果返回后台，后台返回给前端。但随着用户的增加，校验用户是否存在若直接查询数据库，则会对数据库造成很大的压力&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:rgb(250,127,88)&quot;&gt;&lt;strong&gt;第二种&lt;/strong&gt;&lt;/span&gt;：将用户名存储在 &lt;code class=&quot;highlighter-rouge&quot;&gt;redis&lt;/code&gt; 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt; 中，查询的时间复杂度为&lt;code class=&quot;highlighter-rouge&quot;&gt;O(1)&lt;/code&gt;，看起来很不错。问题是用户多了之后，比如有一亿的用户，我们把一亿条用户存储到 &lt;code class=&quot;highlighter-rouge&quot;&gt;redis&lt;/code&gt; 将占用几十 G 的内存，一年需要2万到3万块的费用&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;你对自己的游戏很有信心，相信很快就会达到上亿的用户体量，但又觉得为这一个小功能每年花这么多钱，实在心疼，于是你想优化这个功能，作为一名有志向的程序员，我们是不愿意牺牲性能的，该怎么办？&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:rgb(250,127,88)&quot;&gt;有没有占用空间少，并且能在O(1)的时间纬度准确判断用户是否存在的数据结构呢？&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;答案是没有。。。&lt;/p&gt;

&lt;p&gt;如果有的话，我们就不用学其他的数据结构了，直接用它就好了&lt;/p&gt;

&lt;p&gt;但是我们有一个折衷的方案，这个方案可以省钱，但可能会稍微影响一些性能，注意是“可能”&lt;/p&gt;

&lt;p&gt;这个方案就是使用&lt;span style=&quot;color:rgb(253,85,254)&quot;&gt;布隆过滤器&lt;/span&gt;&lt;/p&gt;

&lt;h1 id=&quot;什么是布隆过滤器&quot;&gt;什么是布隆过滤器&lt;/h1&gt;
&lt;p&gt;布隆过滤器（英语：Bloom Filter）是1970年由布隆提出的，它实际上是一个很长的二进制向量和一系列随机映射函数&lt;/p&gt;

&lt;p&gt;布隆过滤器可以用于&lt;span style=&quot;color:rgb(22,127,88)&quot;&gt;检索一个元素是否在一个集合中&lt;/span&gt;。它的优点是&lt;span style=&quot;color:rgb(255,73,20)&quot;&gt;空间效率和查询时间都远远超过一般的算法&lt;/span&gt;，缺点是有一定的误识别率和删除困难&lt;/p&gt;

&lt;p&gt;其特点为：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;与普通的 hash 函数不同，布隆过滤器可以使用固定长度的集合表示任意数量的元素&lt;/li&gt;
  &lt;li&gt;布隆过滤器在判断元素是否在集合中时，若判断结果为“真”，那么元素不一定存在于我们的真实数据中，这个错误识别的概率可以使用误识别率函数（参考后文）计算&lt;/li&gt;
  &lt;li&gt;向布隆过滤器中添加元素永远不会失败，但随着添加元素数量的增加，误识别率也会线性上升&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;color:rgb(22,127,88)&quot;&gt;布隆过滤器在判断元素是否在集合中时，若判断结果为“假”，那么元素一定不存在于我们的真实数据中&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;不能从布隆过滤器中删除元素，只能重建过滤器&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;布隆过滤器的工作流程&quot;&gt;布隆过滤器的工作流程&lt;/h1&gt;
&lt;p&gt;如下图，是一个拥有 10 个二进制位的空布隆过滤器，每一位都设置为 0&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/3/17/170e79ea6ddfbb89?w=300&amp;amp;h=56&amp;amp;f=png&amp;amp;s=10650&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;就像使用集合一样，我们需要先向布隆过滤器中添加元素。&lt;/p&gt;

&lt;p&gt;若想向布隆过滤器中添加元素，需要使用一些 hash 函数，假设布隆过滤器实现使用了三个 hash 函数 h1，h2 和 h3。&lt;/p&gt;

&lt;p&gt;每一个 hash 函数都会针对添加元素产生一个布隆过滤器的索引，即上图 1 到 10 索引中的一个。当依次使用 h1(元素) ，h2(元素)和h3(元素)产生索引之后，我们就将布隆过滤器中的索引值设置为 1&lt;/p&gt;

&lt;p&gt;例如我们想使用 hash 函数把 “geeks“这个元素添加到布隆过滤器中&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;h1(&quot;geeks&quot;) % 10 = 1
h2(&quot;geeks&quot;) % 10 = 3
h3(&quot;geeks&quot;) % 10 = 7
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;调用这些函数生成索引之后，布隆过滤器会更新对应坐标(注意：这些 hash 函数的返回值只是为了说明布隆过滤器的实现而随机选的)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/3/17/170e79f4ee5d1982?w=300&amp;amp;h=107&amp;amp;f=png&amp;amp;s=19574&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后，我们把 ”nerd“ 元素也添加到布隆过滤器中&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;h1(&quot;nerd&quot;) % 10 = 3
h2(&quot;nerd&quot;) % 10 = 5
h3(&quot;nerd&quot;) % 10 = 4
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;那么我们的布隆过滤器也会随着更新&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/3/17/170e79fa84cb497d?w=300&amp;amp;h=114&amp;amp;f=png&amp;amp;s=19433&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们的布隆过滤器中有两个元素，分别是“geeks”和“nerd”，也可以理解为这两个用户已经注册了游戏。&lt;/p&gt;

&lt;p&gt;现在，有第三个用户注册并也起名为“geeks”，我们需要判断“geeks”是否被注册，如下步骤&lt;/p&gt;

&lt;p&gt;我们还是使用上边的三个hash函数处理元素
根据返回的索引去布隆过滤器中查询&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;若三个索引中有一个为 0，那么我们就可以判断 “geeks”并没有被注册&lt;/li&gt;
  &lt;li&gt;若三个索引的值都是 1 （我们显然已经知道这是成立的），但根据布隆过滤器的规则我们只能知道 “geeks” 可能被注册了&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;布隆过滤器的误算&quot;&gt;布隆过滤器的误算&lt;/h1&gt;
&lt;p&gt;为什么上例的 “geeks” 元素在布隆过滤器中查询后，我们只能判断它可能存在呢？&lt;/p&gt;

&lt;p&gt;下边我们用同样的方法，把“cat”也存放到布隆过滤器中&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;h1(&quot;cat&quot;) % 10 = 1
h2(&quot;cat&quot;) % 10 = 3
h3(&quot;cat&quot;) % 10 = 7
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我们需要“cat”用户hash函数计算的将索引更新为 1，以说明“cat”被添加到布隆过滤器中&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:rgb(200,27,88)&quot;&gt;但这个索引已经在我们添加”geeks“和”nerd“的时候被设置为 1 了&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/3/17/170e7a0481e35322?w=300&amp;amp;h=109&amp;amp;f=png&amp;amp;s=19477&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;所以如果在我们添加“cat”元素之前，使用 “cat”来查询其是否被注册，就会得到错误的结果。&lt;/p&gt;

&lt;p&gt;好消息是我们可以通过增加布隆过滤器的长度来控制误算概率&lt;/p&gt;

&lt;h2 id=&quot;误算率计算&quot;&gt;误算率计算&lt;/h2&gt;
&lt;p&gt;假设我们的布隆过滤器长度为 m ，使用的hash 函数数量为 k， 我们希望向布隆过滤器中添加 n个元素，则误算率 P如下&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/3/17/170e7a0a2a9f0a6f?w=508&amp;amp;h=114&amp;amp;f=png&amp;amp;s=5460&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;布隆过滤器长度计算&quot;&gt;布隆过滤器长度计算&lt;/h2&gt;
&lt;p&gt;如果我们知道我们将要向布隆过滤器中添加 n 个元素，我们希望过滤器的误算率为 p，那么布隆过滤器的长度 m 如下&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/3/17/170e7a0d518e01b3?w=460&amp;amp;h=122&amp;amp;f=png&amp;amp;s=6154&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;理想的-hash-函数数量&quot;&gt;理想的 hash 函数数量&lt;/h2&gt;
&lt;p&gt;hash 函数数量 k 必须是正数，如果我们想向布隆过滤器中添加 n 个元素，布隆过滤器的长度设置为 m ，那么 hash 函数的数量 k 如下&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2020/3/17/170e7a0f900332ed?w=378&amp;amp;h=122&amp;amp;f=png&amp;amp;s=5147&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;布隆过滤器占用更小的空间&quot;&gt;布隆过滤器占用更小的空间&lt;/h1&gt;
&lt;p&gt;一般的数据结构如字典，集合等都会存储元素本身，并且需要从数据结构层处理hash碰撞问题。&lt;/p&gt;

&lt;p&gt;布隆过滤器并不会存储元素本身，也不需要解决 hash 碰撞问题，所以布隆过滤器占用空间下，对于空间的利用率也很高&lt;/p&gt;

&lt;h1 id=&quot;hash-函数的选择&quot;&gt;hash 函数的选择&lt;/h1&gt;
&lt;p&gt;布隆过滤器的hash函数必须是&lt;span style=&quot;color:rgb(250,127,88)&quot;&gt;独立并且均匀分布的，这些函数越快越好&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;一些简洁快速无加密的hash函数可以选择使用Murmur或者Jenkins&lt;/p&gt;

&lt;p&gt;生成 hash 函数是编写布隆过滤器的关键步骤，如果使用加密的hash 函数就会降低布隆过滤器的性能，而使用非加密的hash函数则安全性较差&lt;/p&gt;

&lt;h1 id=&quot;布隆过滤器的应用&quot;&gt;布隆过滤器的应用&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Chrome 使用布隆过滤器判断是否为恶意 URL&lt;/li&gt;
  &lt;li&gt;Apache HBase ，Apache Cassandra 和 Postgresql 使用布隆过滤器检查不存在的行&lt;/li&gt;
  &lt;li&gt;还有一些推荐系统使用布隆过滤器判断某些文章是否被用户阅读过&lt;/li&gt;
  &lt;li&gt;布隆过滤器可以作为缓存前面一层减少缓存压力，并且可以解决一些缓存穿透问题&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 19 Feb 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8/</link>
        <guid isPermaLink="true">http://localhost:4000/%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8/</guid>
        
        
        <category>后端</category>
        
      </item>
    
      <item>
        <title>GO参数传递：指针还是值</title>
        <description>&lt;p&gt;假设有以下三个方法&lt;/p&gt;
&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyStruct&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Val&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myfunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyStruct&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyStruct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myfunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyStruct&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyStruct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myfunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyStruct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Val&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;第一个方法返回&lt;code class=&quot;highlighter-rouge&quot;&gt;MyStruct{Val:1}&lt;/code&gt;的复制&lt;/li&gt;
  &lt;li&gt;第二个方法在函数内创建&lt;code class=&quot;highlighter-rouge&quot;&gt;MyStruct{Val:1}&lt;/code&gt;的指针，将其返回&lt;/li&gt;
  &lt;li&gt;第三个方法需要传入一个&lt;code class=&quot;highlighter-rouge&quot;&gt;MyStruct&lt;/code&gt;，然后函数会覆盖其值
这三种情况在各大源码中都有出现，但其作用相同，那么在这三种方式中进行选择的最佳实践是什么呢？&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;简要回答&quot;&gt;简要回答&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;大多数情况下使用指针传递。&lt;a href=&quot;https://github.com/golang/go/wiki/CodeReviewComments#receiver-type&quot;&gt;google开发组的经验是&lt;/a&gt;:“当你不知道改选择什么进行传递时，就使用指针吧”&lt;/li&gt;
  &lt;li&gt;Slices, maps, channels, strings, function values, 和 interface values本身就是使用指针实现的，所以再使用指针传递是多余的&lt;/li&gt;
  &lt;li&gt;对于打的结构体，或者不得不修改的结构体传指针，否则&lt;a href=&quot;https://github.com/golang/go/wiki/CodeReviewComments#pass-values&quot;&gt;传值&lt;/a&gt;，因为由于传递指针导致结构体被修改的问题很难被排查&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;详细分析&quot;&gt;详细分析&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;大多数情况下都要使用指针传递&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;因为函数经常要修改传递过来的参数，所以在&lt;a href=&quot;https://github.com/golang/go/wiki/CodeReviewComments#receiver-type&quot;&gt;go语言指导&lt;/a&gt;中，推荐使用指针传递，但也有极少部分需要使用值传递，如：
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/jmhodges/copyfighter&quot;&gt;copyfighter&lt;/a&gt; 使用值来传递&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;还有一些情况不需要使用指针&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;google代码审查小组提倡对不需要函数进行修改的、小的结构体中使用值传递，例如&lt;code class=&quot;highlighter-rouge&quot;&gt;type Point struct { latitude, longitude float64 }&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;值传递可以避免由于别名而带来的值的修改错误&lt;/li&gt;
      &lt;li&gt;有时使用小的结构体的值进行参数传递可以避免&lt;a href=&quot;https://en.wikipedia.org/wiki/Locality_of_reference&quot;&gt;缓存未命中&lt;/a&gt;或者重新分配堆空间&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;对于slice，是没有必要使用指针传递的，参考&lt;a href=&quot;https://research.swtch.com/godata&quot;&gt;Go数据结构探究&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;大结构体和小结构体如何区分&lt;/strong&gt;
没有相关知道，需要自己判断&lt;/p&gt;

&lt;h4 id=&quot;参考&quot;&gt;参考&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/23542989/pointers-vs-values-in-parameters-and-return-values&quot;&gt;Pointers vs. values in parameters and return values&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 19 Aug 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/GO%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92-%E6%8C%87%E9%92%88%E8%BF%98%E6%98%AF%E5%80%BC/</link>
        <guid isPermaLink="true">http://localhost:4000/GO%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92-%E6%8C%87%E9%92%88%E8%BF%98%E6%98%AF%E5%80%BC/</guid>
        
        
        <category>后端</category>
        
      </item>
    
      <item>
        <title>namedtuple工厂函数精讲</title>
        <description>&lt;p&gt;首先，我会介绍下使用&lt;code class=&quot;highlighter-rouge&quot;&gt;namedtuple&lt;/code&gt;所需要了解的基本概念，然后讲解如何使用&lt;code class=&quot;highlighter-rouge&quot;&gt;namedtuple&lt;/code&gt;，最后使用&lt;code class=&quot;highlighter-rouge&quot;&gt;namedtuple&lt;/code&gt;来创建一摞纸牌。理解这些之后，就可以权衡利弊，并在生产中使用&lt;/p&gt;

&lt;h2 id=&quot;基本概念&quot;&gt;基本概念&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;namedtuple&lt;/code&gt;是一个 &lt;strong&gt;工厂函数&lt;/strong&gt;，定义在&lt;code class=&quot;highlighter-rouge&quot;&gt;python&lt;/code&gt;标准库的&lt;code class=&quot;highlighter-rouge&quot;&gt;collections&lt;/code&gt;模块中，使用此函数可以创建一个可读性更强的元组&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;namedtuple&lt;/code&gt;函数所创建（返回）的是一个 &lt;strong&gt;元组的子类&lt;/strong&gt;（python中基本数据类型都是类，且可以在&lt;code class=&quot;highlighter-rouge&quot;&gt;buildins&lt;/code&gt;模块中找到）&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;namedtuple&lt;/code&gt;函数所创建元组，中文名称为 &lt;strong&gt;具名元组&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;在使用普通元组的时候，我们只能通过&lt;code class=&quot;highlighter-rouge&quot;&gt;index&lt;/code&gt;来访问元组中的某个数据&lt;/li&gt;
  &lt;li&gt;使用具名元组，我们既可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;index&lt;/code&gt;来访问，也可以使用具名元组中每个字段的名称来访问&lt;/li&gt;
  &lt;li&gt;值得注意的是，具名元组和普通元组所需要的内存空间相同，所以 &lt;strong&gt;不必使用性能来权衡是否使用具名元组&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;如何使用&quot;&gt;如何使用&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;namedtuple&lt;/code&gt;是一个函数，我们先来看下他的参数&lt;/p&gt;

&lt;h4 id=&quot;参数解析&quot;&gt;参数解析&lt;/h4&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;namedtuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;typename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;field_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;有两个必填参数&lt;code class=&quot;highlighter-rouge&quot;&gt;typename&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;field_names&lt;/code&gt;
&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;typename&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;参数类型为字符串&lt;/li&gt;
  &lt;li&gt;具名元组返回一个元组子对象，我们要为这个对象命名，传入&lt;code class=&quot;highlighter-rouge&quot;&gt;typename&lt;/code&gt;参数即可&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;field_names&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;参数类型为字符串序列&lt;/li&gt;
  &lt;li&gt;用于为创建的元组的每个元素命名，可以传入像&lt;code class=&quot;highlighter-rouge&quot;&gt;['a', 'b']&lt;/code&gt;这样的序列，也可以传入&lt;code class=&quot;highlighter-rouge&quot;&gt;'a b'&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;'a, b'&lt;/code&gt;这种被&lt;strong&gt;逗号&lt;/strong&gt;或&lt;strong&gt;空格&lt;/strong&gt;分割的单字符串&lt;/li&gt;
  &lt;li&gt;必须是合法的标识符。不能是关键字如&lt;code class=&quot;highlighter-rouge&quot;&gt;class,def&lt;/code&gt;等&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rename&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;注意的参数中使用了&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;，其后的所有参数必须指定关键字&lt;/li&gt;
  &lt;li&gt;参数为布尔值&lt;/li&gt;
  &lt;li&gt;默认为&lt;code class=&quot;highlighter-rouge&quot;&gt;False&lt;/code&gt;。当我们指定为&lt;code class=&quot;highlighter-rouge&quot;&gt;True&lt;/code&gt;时，如果定义&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;field_names&lt;/code&gt;&lt;/strong&gt;参数时，出现非法参数时，会将其替换为位置名称。如&lt;code class=&quot;highlighter-rouge&quot;&gt;['abc', 'def', 'ghi', 'abc']&lt;/code&gt;会被替换为&lt;code class=&quot;highlighter-rouge&quot;&gt;['abc', '_1', 'ghi', '_3']&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;defaults&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;参数为&lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt;或者可迭代对象&lt;/li&gt;
  &lt;li&gt;当此参数为&lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt;时，创建具名元组的实例时，必须要根据&lt;code class=&quot;highlighter-rouge&quot;&gt;field_names&lt;/code&gt;传递指定数量的参数&lt;/li&gt;
  &lt;li&gt;当设置&lt;code class=&quot;highlighter-rouge&quot;&gt;defaults&lt;/code&gt;时，我们就为具名元组的元素赋予了默认值，被赋予默认值的元素在实例化的时候可以不传入&lt;/li&gt;
  &lt;li&gt;当&lt;code class=&quot;highlighter-rouge&quot;&gt;defaults&lt;/code&gt;传入的序列长度和&lt;code class=&quot;highlighter-rouge&quot;&gt;field_names&lt;/code&gt;不一致时，函数默认会右侧优先&lt;/li&gt;
  &lt;li&gt;如果&lt;code class=&quot;highlighter-rouge&quot;&gt;field_names&lt;/code&gt;是&lt;code class=&quot;highlighter-rouge&quot;&gt;['x', 'y', 'z'] &lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;defaults&lt;/code&gt;是&lt;code class=&quot;highlighter-rouge&quot;&gt;(1, 2)&lt;/code&gt;，那么&lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt;是实例化必填参数，&lt;code class=&quot;highlighter-rouge&quot;&gt;y&lt;/code&gt;默认为&lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;z&lt;/code&gt;默认为&lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;基本使用&quot;&gt;基本使用&lt;/h4&gt;
&lt;p&gt;理解了&lt;code class=&quot;highlighter-rouge&quot;&gt;namedtuple&lt;/code&gt;函数的参数，我们就可以创建具名元组了&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;namedtuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Point'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'y'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 返回一个名为`Point`的类，并赋值给名为`Point`的变量
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# 可以根据参数的位置，或具名参数来实例化（像普通的类一样）
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;# 具名元组可以像普通元组一样通过`index`访问
&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;33&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;# 具名元组可以像普通元组一样解包
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;# 具名元组还可以通过属性名称访问元组内容
&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;33&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;                       &lt;span class=&quot;c1&quot;&gt;# 具名元组在调用`__repr__`,打印实例时，更具可读性
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;具名元组在存储&lt;a href=&quot;https://docs.python.org/3.8/library/csv.html#module-csv&quot; title=&quot;csv: Write and read tabular data to and from delimited files.&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;csv&lt;/code&gt;&lt;/a&gt;或者&lt;a href=&quot;https://docs.python.org/3.8/library/sqlite3.html#module-sqlite3&quot; title=&quot;sqlite3: A DB-API 2.0 implementation using SQLite 3.x.&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sqlite3&lt;/code&gt;&lt;/a&gt;返回数据的时候特别有用&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;EmployeeRecord = namedtuple('EmployeeRecord', 'name, age, title, department, paygrade')

import csv
for emp in map(EmployeeRecord._make, csv.reader(open(&quot;employees.csv&quot;, &quot;rb&quot;))):
    print(emp.name, emp.title)

import sqlite3
conn = sqlite3.connect('/companydata')
cursor = conn.cursor()
cursor.execute('SELECT name, age, title, department, paygrade FROM employees')
for emp in map(EmployeeRecord._make, cursor.fetchall()):
    print(emp.name, emp.title)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;特性&quot;&gt;特性&lt;/h4&gt;
&lt;p&gt;具名元组除了拥有继承自基本元组的所有方法之外，还提供了额外的三个方法和两个属性，为了防止命名冲突，这些方法都会以下划线开头&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_make(iterable)&lt;/code&gt;&lt;/strong&gt;
这是一个类函数，参数是一个迭代器，可以使用这个函数来构建具名元组实例&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; t = [11, 22]
&amp;gt;&amp;gt;&amp;gt; Point._make(t)
Point(x=11, y=22)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_asdict()&lt;/code&gt;&lt;/strong&gt;
实例方法，根据具名元组的名称和其元素值，构建一个&lt;a href=&quot;https://docs.python.org/3.8/library/collections.html#collections.OrderedDict&quot; title=&quot;collections.OrderedDict&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;OrderedDict&lt;/code&gt;&lt;/a&gt;返回&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_asdict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;OrderedDict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'y'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_replace(**kwargs)&lt;/code&gt;&lt;/strong&gt;
实例方法，根据传入的关键词参数，替换具名元组的相关参数，然后返回一个新的具名元组&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; p = Point(x=11, y=22)
&amp;gt;&amp;gt;&amp;gt; p._replace(x=33)
Point(x=33, y=22)

&amp;gt;&amp;gt;&amp;gt; for partnum, record in inventory.items():
...     inventory[partnum] = record._replace(price=newprices[partnum], timestamp=time.now())
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_fields&lt;/code&gt;&lt;/strong&gt;
这是一个实例属性，存储了此具名元组的元素名称元组，在根据已经存在的具名元组创建新的具名元组的时候使用&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; p._fields            # view the field names
('x', 'y')

&amp;gt;&amp;gt;&amp;gt; Color = namedtuple('Color', 'red green blue')
&amp;gt;&amp;gt;&amp;gt; Pixel = namedtuple('Pixel', Point._fields + Color._fields)
&amp;gt;&amp;gt;&amp;gt; Pixel(11, 22, 128, 255, 0)
Pixel(x=11, y=22, red=128, green=255, blue=0)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_fields_defaults&lt;/code&gt;&lt;/strong&gt;
查看具名元组类的默认值&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; Account = namedtuple('Account', ['type', 'balance'], defaults=[0])
&amp;gt;&amp;gt;&amp;gt; Account._fields_defaults
{'balance': 0}
&amp;gt;&amp;gt;&amp;gt; Account('premium')
Account(type='premium', balance=0)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;使用技巧&quot;&gt;使用技巧&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;getattr&lt;/code&gt;获取具名元组元素值
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; getattr(p, 'x')
11
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;将字典转换为具名元组
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; d = {'x': 11, 'y': 22}
&amp;gt;&amp;gt;&amp;gt; Point(**d)
Point(x=11, y=22)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;既然具名元组是一个类，我们当然可以随心所欲的进行定制&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; class Point(namedtuple('Point', ['x', 'y'])):
...     __slots__ = ()
...     @property
...     def hypot(self):
...         return (self.x ** 2 + self.y ** 2) ** 0.5
...     def __str__(self):
...         return 'Point: x=%6.3f  y=%6.3f  hypot=%6.3f' % (self.x, self.y, self.hypot)

&amp;gt;&amp;gt;&amp;gt; for p in Point(3, 4), Point(14, 5/7):
...     print(p)
Point: x= 3.000  y= 4.000  hypot= 5.000
Point: x=14.000  y= 0.714  hypot=14.018
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;__slots__&lt;/code&gt;值的设置可以保证具名元组保持最小的内存占用&lt;/p&gt;

&lt;h2 id=&quot;namedtuple纸牌&quot;&gt;namedtuple纸牌&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;import collections
# 将纸牌定义为具名元组，每个纸牌都有等级和花色
Card = collections.namedtuple('Card', 'rank suit')

class FrenchDeck:
    # 等级2-A
    ranks = [str(n) for n in range(2,11)] + list('JQKA')
    # 花色红黑方草
    suits = 'spades diamonds clubs hearts'.split()
    # 构建纸牌
    def __init__(self):
        self._cards = [Card(rank, suit) for suit in self.suits for rank in self.ranks]
    # 获取纸牌
    def __getitem__(self, position):
        return self._cards[position]

&amp;gt;&amp;gt;&amp;gt; french_deck = FrenchDeck()
&amp;gt;&amp;gt;&amp;gt; french_deck[0]
Card(rank='2', suit='spades')
&amp;gt;&amp;gt;&amp;gt; french_deck[0].rank
'2'
&amp;gt;&amp;gt;&amp;gt; french_deck[0].suit
'spades'
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sat, 17 Aug 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/namedtuple%E5%B7%A5%E5%8E%82%E5%87%BD%E6%95%B0%E7%B2%BE%E8%AE%B2/</link>
        <guid isPermaLink="true">http://localhost:4000/namedtuple%E5%B7%A5%E5%8E%82%E5%87%BD%E6%95%B0%E7%B2%BE%E8%AE%B2/</guid>
        
        
        <category>后端</category>
        
      </item>
    
      <item>
        <title>列表推导内存泄漏问题</title>
        <description>&lt;p&gt;在Python2中的列表推导式中for关键字的赋值操作会对声明的变量产生影响&lt;br /&gt;
例如下边的Python2控制台交互&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; x = 'init'
&amp;gt;&amp;gt;&amp;gt; y = [x for x in 'ABC']
&amp;gt;&amp;gt;&amp;gt; x
C
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;列表推导中的变量x将声明的x覆盖了。这个问题在python3中已经被修复了，表达式内部的变量和赋值，只在局部起作用，表达式上下文内的同名变量还是可以正常引用。&lt;br /&gt;
这是Python3的代码&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; x = 'init'
&amp;gt;&amp;gt;&amp;gt; y = [x for x in 'ABC']
&amp;gt;&amp;gt;&amp;gt; x
init
&amp;gt;&amp;gt;&amp;gt;y
['A', 'B', 'C']
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;x的值被保留了，列表推导也创建了正确的列表&lt;/p&gt;

</description>
        <pubDate>Fri, 19 Jul 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/%E5%88%97%E8%A1%A8%E6%8E%A8%E5%AF%BC%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E9%97%AE%E9%A2%98/</link>
        <guid isPermaLink="true">http://localhost:4000/%E5%88%97%E8%A1%A8%E6%8E%A8%E5%AF%BC%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E9%97%AE%E9%A2%98/</guid>
        
        
        <category>后端</category>
        
      </item>
    
      <item>
        <title>Sentry环境搭建</title>
        <description>&lt;h1 id=&quot;预备知识docker-docker-compose&quot;&gt;预备知识(docker, docker-compose)&lt;/h1&gt;
&lt;p&gt;参考 &lt;code class=&quot;highlighter-rouge&quot;&gt;https://legacy.gitbook.com/book/yeasy/docker_practice/details&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;目标&quot;&gt;目标&lt;/h1&gt;
&lt;p&gt;将sentry跑起来， 能接收错误上报信息，能及时将上报信息以邮件形式反馈给相关人员&lt;/p&gt;

&lt;h1 id=&quot;sentry-使用流程&quot;&gt;Sentry 使用流程&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;用户使用sentry官方服务或将sentry服务端搭建到自己的服务器上&lt;/li&gt;
  &lt;li&gt;进入sentry服务端网页，添加项目，获取key&lt;/li&gt;
  &lt;li&gt;下载sdk，使用key初始化，最后发送异常信息到sentry&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;sentry--服务端搭建&quot;&gt;Sentry  服务端搭建&lt;/h1&gt;
&lt;p&gt;sentry服务端的搭建需要以下环境的支持：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Docker 镜像 &lt;a href=&quot;https://hub.docker.com/_/postgres/&quot;&gt;postgres:9.5&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://redis.io/&quot;&gt;Redis&lt;/a&gt; (最低支持版本 2.8.9)
    &lt;ul&gt;
      &lt;li&gt;使用Ubuntu &amp;lt; 15.04时, 需要安装PPA &lt;a href=&quot;https://launchpad.net/~chris-lea/+archive/ubuntu/redis-server&quot;&gt;chris-lea/redis-server&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Docker 镜像 &lt;a href=&quot;https://hub.docker.com/_/redis/&quot;&gt;redis:3.2-alpine&lt;/a&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;给sentry服务端使用的域名 (i.e. &lt;em&gt;sentry.yourcompany.com&lt;/em&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;sentry有两种搭建方式&lt;em&gt;docker&lt;/em&gt;和&lt;em&gt;Python&lt;/em&gt;，一般使用&lt;em&gt;docker&lt;/em&gt;搭建，如果所使用服务器环境不支持docker，则需使用&lt;a href=&quot;https://docs.sentry.io/server/installation/python/&quot;&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;使用docker搭建&quot;&gt;使用Docker搭建&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; &lt;a href=&quot;https://www.docker.com/getdocker&quot;&gt;Docker 版本需要 1.10+&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;参考 https://github.com/getsentry/onpremise&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;STEP 1&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;git clone https://github.com/getsentry/onpremise.git&lt;/code&gt;
此项目包含使用Docker搭建sentry所需要的基本配置文件，常修改的有三个：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sentry.conf.py&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;config.yml&lt;/code&gt;          : 基础配置&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;requirements.txt&lt;/code&gt; : 配置安装插件&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;STEP 2&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;docker volume create --name=sentry-data &amp;amp;&amp;amp; docker volume create --name=sentry-postgres&lt;/code&gt;
创建两个数据卷，分别提供给sentry和数据库使用&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 3&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;cp -n .env.example .env&lt;/code&gt;
将&lt;code class=&quot;highlighter-rouge&quot;&gt;onpremise&lt;/code&gt;项目提供的&lt;code class=&quot;highlighter-rouge&quot;&gt;env.example&lt;/code&gt;模板文件复制一份，并命名为&lt;code class=&quot;highlighter-rouge&quot;&gt;.env&lt;/code&gt;，目的是让&lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose&lt;/code&gt;从此文件中获取环境变量，此文件目前只是配置了 sentry 秘钥
参考：&lt;a href=&quot;https://yeasy.gitbooks.io/docker_practice/content/compose/compose_file.html#envfile&quot;&gt;docker-compose env使用&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 4&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose build&lt;/code&gt;
根据&lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt;中的配置构建容器&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 5&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose run --rm web config generate-secret-key&lt;/code&gt;
生成秘钥，生成之后需要将秘钥复制到&lt;code class=&quot;highlighter-rouge&quot;&gt;STEP 3&lt;/code&gt;中的&lt;code class=&quot;highlighter-rouge&quot;&gt;.env&lt;/code&gt;中&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 6&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose run --rm web upgrade&lt;/code&gt;
构建数据库，用户根据向导可配置超级管理员用户&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 7&lt;/strong&gt; 初始化配置文件(config.yml):
&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3993341-c811c84315562ee2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;config.yml&quot; /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;邮件信息 : 公司固定配置&lt;/li&gt;
  &lt;li&gt;system.url-prefix : 需要根据自己搭建的信息配置如&lt;code class=&quot;highlighter-rouge&quot;&gt;http://3try.ktvsky.com&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;STEP 8&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose up -d&lt;/code&gt;
启动所有的docker 服务&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 9&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:9000&lt;/code&gt;
访问 &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:9000&lt;/code&gt;即可进入docker服务端界面&lt;/p&gt;

&lt;h1 id=&quot;排查错误&quot;&gt;排查错误&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;查看日志&lt;/strong&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose logs -f -t&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;保存输出&lt;/strong&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose logs -f -t &amp;gt;&amp;gt; myDockerCompose.log&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 17 Jul 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/Sentry%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
        <guid isPermaLink="true">http://localhost:4000/Sentry%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
        
        
        <category>后端</category>
        
      </item>
    
      <item>
        <title>RSA加密过程</title>
        <description>&lt;h2 id=&quot;准备知识&quot;&gt;准备知识&lt;/h2&gt;
&lt;p&gt;除了1和自身外，没法被其他自然数整除的大于1的整数&lt;/p&gt;
&lt;h5 id=&quot;质数&quot;&gt;质数&lt;/h5&gt;
&lt;p&gt;除了1和自身外，没法被其他自然数整除的大于1的整数                 &lt;br /&gt;
如：&lt;code class=&quot;highlighter-rouge&quot;&gt;2，3，5，7，11，13&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&quot;互质数&quot;&gt;互质数&lt;/h5&gt;
&lt;p&gt;公因数只有1的两个非零自然数，叫做互质数。                             &lt;br /&gt;
如 &lt;code class=&quot;highlighter-rouge&quot;&gt;5，12&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&quot;欧拉函数&quot;&gt;欧拉函数&lt;/h5&gt;
&lt;p&gt;小于n的正整数中与n互质的数的数目。                                        &lt;br /&gt;
如:1到7中，与8互质的整数为&lt;code class=&quot;highlighter-rouge&quot;&gt;1，3，5，7&lt;/code&gt;，所以&lt;code class=&quot;highlighter-rouge&quot;&gt;φ(8)=4&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;性质：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;给定一个正整数&lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt;，如果两个整数&lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;满足&lt;code class=&quot;highlighter-rouge&quot;&gt;a-b&lt;/code&gt;能够被&lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt;整除，即&lt;code class=&quot;highlighter-rouge&quot;&gt;(a-b)/m&lt;/code&gt;得到一个整数，那么就称整数&lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;与&lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;对模m同余，记作&lt;code class=&quot;highlighter-rouge&quot;&gt;a≡b(mod m)&lt;/code&gt;  &lt;br /&gt;如：&lt;code class=&quot;highlighter-rouge&quot;&gt;3≡5 （mod 2)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;若&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;为质数则 &lt;code class=&quot;highlighter-rouge&quot;&gt;φ(n)=n-1&lt;/code&gt;(注：&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;为质数，&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;的因数只有&lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;,前&lt;code class=&quot;highlighter-rouge&quot;&gt;n-1&lt;/code&gt;个数与&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;的公因数只有&lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;，所以&lt;code class=&quot;highlighter-rouge&quot;&gt; φ(n)=n-1&lt;/code&gt; 即&lt;code class=&quot;highlighter-rouge&quot;&gt;1，2，3，...，n-1&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;若&lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;互质，&lt;code class=&quot;highlighter-rouge&quot;&gt; φ(m * n)=φ(m) * φ(n) &lt;/code&gt;(当&lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;都为质数时，&lt;code class=&quot;highlighter-rouge&quot;&gt;φ(m*n)=φ(m) * φ(n) = (m-1) * (n-1)&lt;/code&gt;  ,因为&lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;n &lt;/code&gt;为质数，所以&lt;code class=&quot;highlighter-rouge&quot;&gt;m*n&lt;/code&gt;只与&lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;的倍数不是互质数，一共有&lt;code class=&quot;highlighter-rouge&quot;&gt;m * n -1 &lt;/code&gt;个数， &lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt;的倍数有&lt;code class=&quot;highlighter-rouge&quot;&gt;n-1&lt;/code&gt;个， &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;的倍数&lt;code class=&quot;highlighter-rouge&quot;&gt;m-1&lt;/code&gt;个，所以&lt;code class=&quot;highlighter-rouge&quot;&gt;φ(m * n)=(m * n-1) - (m-1) - (n-1)=(m-1) * (n-1)&lt;/code&gt;）&lt;/li&gt;
  &lt;li&gt;若&lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; 互质，则  ` m ** φ(n) ≡ 1 (mod n)&lt;code class=&quot;highlighter-rouge&quot;&gt;
 4.1 模反元素：若&lt;/code&gt;m,n&lt;code class=&quot;highlighter-rouge&quot;&gt; 互质，一定存在一个整数&lt;/code&gt;a&lt;code class=&quot;highlighter-rouge&quot;&gt;, 使得：&lt;/code&gt;m * a ≡ 1 (mod n)&lt;code class=&quot;highlighter-rouge&quot;&gt;。称&lt;/code&gt;a&lt;code class=&quot;highlighter-rouge&quot;&gt;为&lt;/code&gt;m&lt;code class=&quot;highlighter-rouge&quot;&gt;对于&lt;/code&gt;n`的模反元素&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;rsa生成过程&quot;&gt;RSA生成过程&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;随机选择两个极大的不相等质数&lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;q&lt;/code&gt;；                                                                                                                                                                                                   &lt;br /&gt;
 1.1 为方便计算取&lt;code class=&quot;highlighter-rouge&quot;&gt;p = 13&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt; q = 17&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;计算&lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt;与&lt;code class=&quot;highlighter-rouge&quot;&gt;q&lt;/code&gt;的乘积&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;；                                                                                                                                                                                                                                       &lt;br /&gt;
 2.1 &lt;code class=&quot;highlighter-rouge&quot;&gt;n = 13  *  17 = 221&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;计算&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;的欧拉函数&lt;code class=&quot;highlighter-rouge&quot;&gt;φ(n)&lt;/code&gt;；                                                                                                                                                                                                                             &lt;br /&gt;
 3.1  &lt;code class=&quot;highlighter-rouge&quot;&gt;φ(n) = （13 - 1） * （17 - 1） = 192&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;随机选择一个整数&lt;code class=&quot;highlighter-rouge&quot;&gt;e&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;1&amp;lt;e&amp;lt;φ(n)&lt;/code&gt;且&lt;code class=&quot;highlighter-rouge&quot;&gt;e&lt;/code&gt;与&lt;code class=&quot;highlighter-rouge&quot;&gt;φ(n)&lt;/code&gt;互质；                                                                                                                                                                                            &lt;br /&gt;
 4.1 例如取&lt;code class=&quot;highlighter-rouge&quot;&gt;e = 5&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;计算&lt;code class=&quot;highlighter-rouge&quot;&gt;e&lt;/code&gt;对于&lt;code class=&quot;highlighter-rouge&quot;&gt;φ(n)&lt;/code&gt;的模反元素&lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt; ed ≡ 1 (mod φ(n))  e * d = k * φ(n) + 1   d = (k * φ(n) + 1)/e &lt;/code&gt; 取&lt;code class=&quot;highlighter-rouge&quot;&gt;k=0,1,2...&lt;/code&gt;计算&lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt;的数值，直到&lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt;为整数
 5.1 求得&lt;code class=&quot;highlighter-rouge&quot;&gt; d = 77&lt;/code&gt;，此时&lt;code class=&quot;highlighter-rouge&quot;&gt;k=2&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;e&lt;/code&gt;封装为公钥， &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt;封装为私钥;                                                                                                                                                                                                   &lt;br /&gt;
 6.1 即以上步骤生成的公钥为&lt;code class=&quot;highlighter-rouge&quot;&gt; 221，5 &lt;/code&gt;   私钥为&lt;code class=&quot;highlighter-rouge&quot;&gt; 221，77&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;加密过程&quot;&gt;加密过程&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;有待加密信息&lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt;(&lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt;必须为整数，字符串取&lt;code class=&quot;highlighter-rouge&quot;&gt;ascii&lt;/code&gt;值或&lt;code class=&quot;highlighter-rouge&quot;&gt;unicode&lt;/code&gt;值, 且&lt;code class=&quot;highlighter-rouge&quot;&gt;m &amp;lt; n&lt;/code&gt;)；                                                                                                                                                         &lt;br /&gt;
 1.1 例如取&lt;code class=&quot;highlighter-rouge&quot;&gt;m = 10&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;根据加密公式&lt;code class=&quot;highlighter-rouge&quot;&gt;m ** e ≡ c (mod n)&lt;/code&gt; ，使用公钥加密,生成密文 &lt;code class=&quot;highlighter-rouge&quot;&gt;c&lt;/code&gt;;                                                                                                                                                                                                &lt;br /&gt;
 2.1 &lt;code class=&quot;highlighter-rouge&quot;&gt;10 ** 5 % 221 = 108&lt;/code&gt;  即&lt;code class=&quot;highlighter-rouge&quot;&gt;c = 108&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;3.根据解密公式 &lt;code class=&quot;highlighter-rouge&quot;&gt;c ** d ≡ m (mod n) &lt;/code&gt;  使用私钥解密,生成明文 &lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt;为;                                                                                                                                                                                               &lt;br /&gt;
 3.1 &lt;code class=&quot;highlighter-rouge&quot;&gt;108 ** 77 % 221 = 10&lt;/code&gt; 即&lt;code class=&quot;highlighter-rouge&quot;&gt;m = 10&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;rsa加密安全性探讨&quot;&gt;RSA加密安全性探讨：&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;基于已知的公钥，是否能计算出私钥：即已知&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;e&lt;/code&gt; 求 &lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;因为 &lt;code class=&quot;highlighter-rouge&quot;&gt;d = (k * φ(n) + 1)/e&lt;/code&gt;， 所以只需计算出&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;的欧拉函数值&lt;code class=&quot;highlighter-rouge&quot;&gt;φ(n)&lt;/code&gt;, 已知&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;是两个质数&lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;q&lt;/code&gt;的乘积 &lt;code class=&quot;highlighter-rouge&quot;&gt;φ(n) = φ(p * q) = φ(p) * φ(q) = (p-1) * (q-1)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RSA&lt;/code&gt;加密安全强度就是在于&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;的因数分解的难度，&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;越大越安全，目前&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;为1024或2048位，普通计算机无法对其进行因式分解&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 15 Jul 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/RSA%E5%8A%A0%E5%AF%86%E8%BF%87%E7%A8%8B/</link>
        <guid isPermaLink="true">http://localhost:4000/RSA%E5%8A%A0%E5%AF%86%E8%BF%87%E7%A8%8B/</guid>
        
        
        <category>后端</category>
        
      </item>
    
      <item>
        <title>构建可拓展服务</title>
        <description>&lt;h2 id=&quot;可拓展服务基础&quot;&gt;可拓展服务基础&lt;/h2&gt;
&lt;p&gt;https://www.lecloud.net/tagged/scalability/chrono&lt;/p&gt;
&lt;h4 id=&quot;横向扩展&quot;&gt;横向扩展&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;每个服务器搭建相同的代码库，不存储用户数据&lt;/li&gt;
  &lt;li&gt;用户session存储在独立的数据库或缓存中&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;数据库优化&quot;&gt;数据库优化&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;主从分离，从读主写&lt;/li&gt;
  &lt;li&gt;主库优化方法为添加RAM,所以主服务器性能不够时，很难优化&lt;/li&gt;
  &lt;li&gt;使用nosql&lt;/li&gt;
  &lt;li&gt;像使用nosql一样使用mysql，不要使用过多的join
    &lt;blockquote&gt;
      &lt;p&gt;&lt;a href=&quot;https://softwareengineering.stackexchange.com/questions/194340/why-are-nosql-databases-more-scalable-than-sql&quot;&gt;为什么NOSQL更容易扩展?(注：两种数据库各有优劣，此处针对扩展性)&lt;/a&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;使用缓存&quot;&gt;使用缓存&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;redis&lt;/li&gt;
  &lt;li&gt;memcache&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;使用异步&quot;&gt;使用异步&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;原生异步更有效率&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;性能与可扩展性&quot;&gt;性能与可扩展性&lt;/h2&gt;
&lt;p&gt;如果服务的性能随着资源的增加而成笔记增加，那么这个服务就是客拓展的&lt;/p&gt;

&lt;h2 id=&quot;延迟与吞吐量&quot;&gt;延迟与吞吐量&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;延迟&lt;/strong&gt;是执行操作或运算结果所花费的时间。 &lt;br /&gt;
&lt;strong&gt;吞吐量&lt;/strong&gt;是单位时间内（执行）此类操作或运算的数量。&lt;br /&gt;
通常，你应该以可接受级延迟下最大化吞吐量为目标。&lt;/p&gt;

&lt;h2 id=&quot;cap&quot;&gt;CAP&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3993341-472afac9a36911ff.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;一致性&lt;/strong&gt; : 每次访问都能获得最新数据但可能会收到错误响应&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;可用性&lt;/strong&gt; : 每次访问都能收到非错响应，但不保证获取到最新数据&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;分区容错性&lt;/strong&gt; : 在任意分区网络故障的情况下系统仍能继续运行 &lt;br /&gt;
&lt;strong&gt;网络并不可靠，所以你应要支持分区容错性，并需要在软件可用性和一致性间做出取舍&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 11 Jul 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8B%93%E5%B1%95%E6%9C%8D%E5%8A%A1/</link>
        <guid isPermaLink="true">http://localhost:4000/%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%8B%93%E5%B1%95%E6%9C%8D%E5%8A%A1/</guid>
        
        
        <category>后端</category>
        
      </item>
    
      <item>
        <title>使用confd + etcd实现Nginx动态配置</title>
        <description>&lt;h2 id=&quot;etcd&quot;&gt;etcd&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;etcd&lt;/code&gt;是一个高可用的分布式键值(key-value)&lt;strong&gt;数据库&lt;/strong&gt;。内部采用&lt;code class=&quot;highlighter-rouge&quot;&gt;raft&lt;/code&gt;协议作为一致性算法，基于Go语言实现。&lt;code class=&quot;highlighter-rouge&quot;&gt;etcd&lt;/code&gt;数据库与&lt;code class=&quot;highlighter-rouge&quot;&gt;redis&lt;/code&gt;类似，其独特性在于：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;分布式部署，扩展性强，且数据和事务保持一致&lt;/li&gt;
  &lt;li&gt;提供&lt;code class=&quot;highlighter-rouge&quot;&gt;watch&lt;/code&gt;接口，可监听多个键的变化&lt;/li&gt;
  &lt;li&gt;对于单个键而言，每次更新其值都会保留上一个版本，可以对键进行版本回溯&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ttl&lt;/code&gt;使用租约实现&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;etcd&lt;/code&gt;&lt;/strong&gt;更强调的是各个节点之间的通信，同步，确保各个节点上数据和事务的一致性，使得服务更稳定，本身单节点的写入能力并不强。 
&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;redis&lt;/code&gt;&lt;/strong&gt;更像是内存型缓存，虽然也有&lt;code class=&quot;highlighter-rouge&quot;&gt;cluster&lt;/code&gt;做主从同步和读写分离，但节点间的一致性主要强调的是数据，并不在乎事务，因此读写能力很强，&lt;code class=&quot;highlighter-rouge&quot;&gt;qps&lt;/code&gt;甚至可以达到10万+&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;安装&quot;&gt;安装&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;$ mkdir etcd
$ cd etcd
$ curl -L https://github.com/etcd-io/etcd/releases/download/v3.3.13/etcd-v3.3.13-linux-amd64.tar.gz -o 
$ ./etcd-v3.3.13-linux-amd64.tar.gz
$ tar xzvf etcd-v3.3.13-linux-amd64.tar.gz --strip-components=1
$ ./etcd -version
$ ./etcdctl -version
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;本地多成员集群&quot;&gt;本地多成员集群&lt;/h4&gt;
&lt;p&gt;针对单机用户，开启多进程，模拟多机器集群(本次模拟开启三个&lt;code class=&quot;highlighter-rouge&quot;&gt;etcd&lt;/code&gt;集群)&lt;/p&gt;

&lt;h6 id=&quot;1-安装go&quot;&gt;1. 安装&lt;code class=&quot;highlighter-rouge&quot;&gt;go&lt;/code&gt;&lt;/h6&gt;

&lt;h6 id=&quot;2-安装goreman进程管理工具&quot;&gt;2. 安装&lt;code class=&quot;highlighter-rouge&quot;&gt;goreman&lt;/code&gt;（进程管理工具）&lt;/h6&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;go get github.com/mattn/goreman
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h6 id=&quot;3-查看gopath&quot;&gt;3. 查看&lt;code class=&quot;highlighter-rouge&quot;&gt;gopath&lt;/code&gt;&lt;/h6&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;go &lt;span class=&quot;nb&quot;&gt;env
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GOPATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/home/apple/go&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;所以&lt;code class=&quot;highlighter-rouge&quot;&gt;goreman&lt;/code&gt;运行路径为&lt;code class=&quot;highlighter-rouge&quot;&gt;home/apple/go/bin/goreman&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h6 id=&quot;4-编写goroman配置文件&quot;&gt;4. 编写&lt;code class=&quot;highlighter-rouge&quot;&gt;goroman&lt;/code&gt;配置文件&lt;/h6&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;goroman&lt;/code&gt;配置文件默认名称为Procfile,可以更换，但启动时，需要通过&lt;code class=&quot;highlighter-rouge&quot;&gt;-c&lt;/code&gt;指定配置文件
&lt;code class=&quot;highlighter-rouge&quot;&gt;goroman&lt;/code&gt;管理进程的配置文件由 &lt;code class=&quot;highlighter-rouge&quot;&gt;进程名:执行命令&lt;/code&gt;组成&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;$ vim Procfile
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;编辑内容如下&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;etcd1: ./etcd --name infra1 --listen-client-urls http://127.0.0.1:2379 --advertise-client-urls http://127.0.0.1:2379 --listen-peer-urls http://127.0.0.1:12380 --initial-advertise-peer-urls http://127.0.0.1:12    380 --initial-cluster-token etcd-cluster-1 --initial-cluster 'infra1=http://127.0.0.1:12380,infra2=http://127.0.0.1:22380,infra3=http://127.0.0.1:32380' --initial-cluster-state new --enable-pprof
etcd2: ./etcd --name infra2 --listen-client-urls http://127.0.0.1:22379 --advertise-client-urls http://127.0.0.1:22379 --listen-peer-urls http://127.0.0.1:22380 --initial-advertise-peer-urls http://127.0.0.1:    22380 --initial-cluster-token etcd-cluster-1 --initial-cluster 'infra1=http://127.0.0.1:12380,infra2=http://127.0.0.1:22380,infra3=http://127.0.0.1:32380' --initial-cluster-state new --enable-pprof
etcd3: ./etcd --name infra3 --listen-client-urls http://127.0.0.1:32379 --advertise-client-urls http://127.0.0.1:32379 --listen-peer-urls http://127.0.0.1:32380 --initial-advertise-peer-urls http://127.0.0.1:    32380 --initial-cluster-token etcd-cluster-1 --initial-cluster 'infra1=http://127.0.0.1:12380,infra2=http://127.0.0.1:22380,infra3=http://127.0.0.1:32380' --initial-cluster-state new --enable-pprof
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h6 id=&quot;5-运行&quot;&gt;5. 运行&lt;/h6&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;/home/apple/go/bin/goreman &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt;  Procfile start
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;此时&lt;code class=&quot;highlighter-rouge&quot;&gt;etcd&lt;/code&gt;集群被开启&lt;/p&gt;
&lt;h6 id=&quot;6查看集群列表&quot;&gt;6.查看集群列表&lt;/h6&gt;
&lt;p&gt;此时代表集群正确安装并启动&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ETCDCTL_API&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./etcdctl member list
8211f1d0f64f3269: &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;infra1 &lt;span class=&quot;nv&quot;&gt;peerURLs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:12380 &lt;span class=&quot;nv&quot;&gt;clientURLs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:2379 &lt;span class=&quot;nv&quot;&gt;isLeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false
&lt;/span&gt;91bc3c398fb3c146: &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;infra2 &lt;span class=&quot;nv&quot;&gt;peerURLs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:22380 &lt;span class=&quot;nv&quot;&gt;clientURLs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:22379 &lt;span class=&quot;nv&quot;&gt;isLeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true
&lt;/span&gt;fd422379fda50e48: &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;infra3 &lt;span class=&quot;nv&quot;&gt;peerURLs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:32380 &lt;span class=&quot;nv&quot;&gt;clientURLs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:32379 &lt;span class=&quot;nv&quot;&gt;isLeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;etcd基本使用&quot;&gt;etcd基本使用&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;API&lt;/code&gt;地址&lt;code class=&quot;highlighter-rouge&quot;&gt;https://godoc.org/github.com/coreos/etcd/client&lt;/code&gt;
官方包提供了对于&lt;code class=&quot;highlighter-rouge&quot;&gt;etcd&lt;/code&gt;所有操作的&lt;code class=&quot;highlighter-rouge&quot;&gt;API&lt;/code&gt;&lt;/p&gt;

&lt;h6 id=&quot;创建用于操作etcd键值的keysapi对象kv&quot;&gt;创建用于操作&lt;code class=&quot;highlighter-rouge&quot;&gt;etcd&lt;/code&gt;键值的&lt;code class=&quot;highlighter-rouge&quot;&gt;KeysAPI&lt;/code&gt;对象&lt;code class=&quot;highlighter-rouge&quot;&gt;kv&lt;/code&gt;&lt;/h6&gt;
&lt;div class=&quot;language-golang highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kv&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KeysAPI&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handleError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Fatal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cfg&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Endpoints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://127.0.0.1:2379&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://127.0.0.1:22379&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://127.0.0.1:32379&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;New&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cfg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handleError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kv&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NewKeysAPI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h6 id=&quot;设置键&quot;&gt;设置键&lt;/h6&gt;
&lt;div class=&quot;language-golang highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kv&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KeysAPI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;设置键%s值%s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h6 id=&quot;获取键值&quot;&gt;获取键值&lt;/h6&gt;
&lt;div class=&quot;language-golang highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kv&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KeysAPI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// 获取键&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;开始获取键%s &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TODO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handleError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;获取当前版本:%d 值:%s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;创建文件夹&quot;&gt;创建文件夹&lt;/h6&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;etcd&lt;/code&gt;的键值对存储可以理解为文件存储在目录中，键为目录，值为文件
创建文件夹的目的为：使用&lt;code class=&quot;highlighter-rouge&quot;&gt;etcd&lt;/code&gt;提供的&lt;code class=&quot;highlighter-rouge&quot;&gt;watch&lt;/code&gt;方法可以监控整个文件夹中键（即文件）的变化&lt;/p&gt;
&lt;div class=&quot;language-golang highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mkdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kv&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KeysAPI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handleError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;创建完成&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;调用&quot;&gt;调用&lt;/h6&gt;
&lt;div class=&quot;language-golang highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestSetVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/nginx/foo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestGetVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/nginx/foo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestMkdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mkdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/nginx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;confd&quot;&gt;confd&lt;/h2&gt;
&lt;p&gt;轻量级的配置管理工具，主要有两个目的&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;读取etcd保存的配置信息，同步到本地配置文件中，并保证本地配置文件是最新的&lt;/li&gt;
  &lt;li&gt;同步配置文件之后可以指定命令使配置生效&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;安装-1&quot;&gt;安装&lt;/h4&gt;
&lt;p&gt;https://github.com/kelseyhightower/confd/blob/master/docs/installation.md&lt;/p&gt;

&lt;h4 id=&quot;使用&quot;&gt;使用&lt;/h4&gt;
&lt;p&gt;把核心信息，比如&lt;code class=&quot;highlighter-rouge&quot;&gt;upstream&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;server_name&lt;/code&gt;等存储在&lt;code class=&quot;highlighter-rouge&quot;&gt;etcd&lt;/code&gt;中，使用&lt;code class=&quot;highlighter-rouge&quot;&gt;confd&lt;/code&gt;来自动生成&lt;code class=&quot;highlighter-rouge&quot;&gt;nginx&lt;/code&gt;配置文件,并&lt;code class=&quot;highlighter-rouge&quot;&gt;reload&lt;/code&gt;使配置生效&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;upstream www_test {
    server 196.75.121.112:443;     （动态生成）
}

server {
    listen       443 ssl; （动态生成）
    server_name  www.test.com; (动态生成)
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;; 
    ssl_certificate             /home/build/openresty/nginx/cert/dealssl/www.bestenover.com.crt; (动态生成)

    location / { 
        proxy_pass https://www_test; (动态生成)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect off;
    }   
}
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;要实现动态配置首先要把核心信息存储到etcd中&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;func TestNginxMkdir(t *testing.T) {
	mkdir(kv, &quot;/nginx&quot;)
	mkdir(kv, &quot;/nginx/https&quot;)
	mkdir(kv, &quot;/nginx/http&quot;)
	mkdir(kv, &quot;/nginx/ssl&quot;)
	mkdir(kv, &quot;/nginx/https/www&quot;)
	mkdir(kv, &quot;/nginx/https/www/server&quot;)
	mkdir(kv, &quot;/nginx/https/www/upstream&quot;)
	mkdir(kv, &quot;/nginx/https/www/server/location&quot;)
}
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;confd&lt;/code&gt;注册监控&lt;code class=&quot;highlighter-rouge&quot;&gt;etcd&lt;/code&gt;的&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;为&lt;code class=&quot;highlighter-rouge&quot;&gt;/nginx/&lt;/code&gt;，只要发生变化就通知&lt;code class=&quot;highlighter-rouge&quot;&gt;confd&lt;/code&gt;根据模板生成配置。&lt;code class=&quot;highlighter-rouge&quot;&gt;confd&lt;/code&gt;默认的配置路径为&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/confd/&lt;/code&gt;，创建&lt;code class=&quot;highlighter-rouge&quot;&gt;conf.d&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;template&lt;/code&gt;两个目录，分别存放配置资源和配置模板。&lt;/p&gt;

&lt;p&gt;nginx的配置资源如下所示：test.conf.toml&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;[template]
src = &quot;test.conf.tmpl&quot;
dest = &quot;/tmp/test.conf&quot;
keys = [
    &quot;/nginx&quot;,
]
check_cmd = &quot;echo a&quot;
reload_cmd = &quot;echo b&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nginx&lt;/code&gt;的配置模板如下所示：&lt;code class=&quot;highlighter-rouge&quot;&gt;test.conf.tmpl&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;upstream www_ {
    server ;
    
}

server {
    server_name         :443;
    ssl on
    ssl_certificate     ;
    ssl_certificate_key ;
    location / {
        proxy_pass        http://www_;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect    off;
    }
}
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;开启&lt;code class=&quot;highlighter-rouge&quot;&gt;confd&lt;/code&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;confd -watch -backend etcd -node http://127.0.0.1:2379&lt;/code&gt;
设置内容&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;func TestNginxSetVal(t *testing.T) {
	setVal(kv, &quot;/nginx/https/www/server/server_name&quot;, &quot;test.com&quot;)
	setVal(kv, &quot;/nginx/https/www/server/ssl_certificate&quot;, &quot;client.crt&quot;)
	setVal(kv, &quot;/nginx/https/www/server/ssl_certificate_key&quot;, &quot;client.key&quot;)
	setVal(kv, &quot;/nginx/https/www/upstream/server1&quot;, &quot;192.168.4.2:443&quot;)
	setVal(kv, &quot;/nginx/https/www/upstream/server2&quot;, &quot;192.168.5.2:443&quot;)
}
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;生成结果&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  1 upstream www_test.com {                                                                                                                                                                                         
  2     server 192.168.4.2:443;
  3     server 192.168.5.2:443;
  4 
  5 }
  6 
  7 server {
  8     server_name         test.com:443;
  9     ssl on
 10     ssl_certificate     client.crt;
 11     ssl_certificate_key client.key;
 12     location / {
 13         proxy_pass        http://www_test.com;
 14         proxy_set_header Host $host;
 15         proxy_set_header X-Real-IP $remote_addr;
 16         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 17         proxy_set_header X-Forwarded-Proto https;
 18         proxy_redirect    off;
 19     }
 20 }
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 11 Jun 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/%E4%BD%BF%E7%94%A8confd-+-etcd%E5%AE%9E%E7%8E%B0Nginx%E5%8A%A8%E6%80%81%E9%85%8D%E7%BD%AE/</link>
        <guid isPermaLink="true">http://localhost:4000/%E4%BD%BF%E7%94%A8confd-+-etcd%E5%AE%9E%E7%8E%B0Nginx%E5%8A%A8%E6%80%81%E9%85%8D%E7%BD%AE/</guid>
        
        
        <category>后端</category>
        
      </item>
    
      <item>
        <title>ETCD 安装</title>
        <description>&lt;h4 id=&quot;应用场景&quot;&gt;应用场景&lt;/h4&gt;
&lt;p&gt;https://tonydeng.github.io/2015/10/19/etcd-application-scenarios/&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;集群监控与LEADER竞选&lt;/li&gt;
  &lt;li&gt;分布式队列&lt;/li&gt;
  &lt;li&gt;分布式锁&lt;/li&gt;
  &lt;li&gt;分布式通知与协调&lt;/li&gt;
  &lt;li&gt;消息发布与订阅&lt;/li&gt;
  &lt;li&gt;服务发现&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;本地使用&quot;&gt;本地使用&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;负载均衡&lt;/li&gt;
  &lt;li&gt;健康检查&lt;/li&gt;
  &lt;li&gt;nginx配置&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;模拟安装运行&quot;&gt;模拟安装运行&lt;/h2&gt;
&lt;p&gt;https://yeasy.gitbooks.io/docker_practice/etcd/&lt;/p&gt;

&lt;h2 id=&quot;直接安装&quot;&gt;直接安装&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;$ mkdir etcd
$ cd etcd
$ curl -L https://github.com/etcd-io/etcd/releases/download/v3.3.13/etcd-v3.3.13-linux-amd64.tar.gz -o 
$ ./etcd-v3.3.13-linux-amd64.tar.gz
$ tar xzvf etcd-v3.3.13-linux-amd64.tar.gz --strip-components=1
$ ./etcd -version
$ ./etcdctl -version
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;本地独立&quot;&gt;本地独立&lt;/h2&gt;
&lt;p&gt;使用 API 版本 3&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ETCDCTL_API&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./etcdctl put foo bar
OK
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./etcdctl get foo
bar
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;本地多成员集群&quot;&gt;本地多成员集群&lt;/h2&gt;
&lt;p&gt;模拟多机器集群&lt;/p&gt;
&lt;h4 id=&quot;1-安装go&quot;&gt;1. 安装go&lt;/h4&gt;
&lt;h4 id=&quot;2-安装goreman&quot;&gt;2. 安装goreman&lt;/h4&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;go get github.com/mattn/goreman
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;3-查看gopath&quot;&gt;3. 查看gopath&lt;/h4&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;go &lt;span class=&quot;nb&quot;&gt;env
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GOPATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/home/apple/go&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;所以&lt;code class=&quot;highlighter-rouge&quot;&gt;goreman&lt;/code&gt;运行路径为&lt;code class=&quot;highlighter-rouge&quot;&gt;home/apple/go/bin/goreman&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;4-编写goroman配置文件&quot;&gt;4. 编写goroman配置文件&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;$ vim Procfile
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;编辑内容如下&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;etcd1: ./etcd --name infra1 --listen-client-urls http://127.0.0.1:2379 --advertise-client-urls http://127.0.0.1:2379 --listen-peer-urls http://127.0.0.1:12380 --initial-advertise-peer-urls http://127.0.0.1:12    380 --initial-cluster-token etcd-cluster-1 --initial-cluster 'infra1=http://127.0.0.1:12380,infra2=http://127.0.0.1:22380,infra3=http://127.0.0.1:32380' --initial-cluster-state new --enable-pprof
etcd2: ./etcd --name infra2 --listen-client-urls http://127.0.0.1:22379 --advertise-client-urls http://127.0.0.1:22379 --listen-peer-urls http://127.0.0.1:22380 --initial-advertise-peer-urls http://127.0.0.1:    22380 --initial-cluster-token etcd-cluster-1 --initial-cluster 'infra1=http://127.0.0.1:12380,infra2=http://127.0.0.1:22380,infra3=http://127.0.0.1:32380' --initial-cluster-state new --enable-pprof
etcd3: ./etcd --name infra3 --listen-client-urls http://127.0.0.1:32379 --advertise-client-urls http://127.0.0.1:32379 --listen-peer-urls http://127.0.0.1:32380 --initial-advertise-peer-urls http://127.0.0.1:    32380 --initial-cluster-token etcd-cluster-1 --initial-cluster 'infra1=http://127.0.0.1:12380,infra2=http://127.0.0.1:22380,infra3=http://127.0.0.1:32380' --initial-cluster-state new --enable-pprof
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;5-运行&quot;&gt;5. 运行&lt;/h4&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;/home/apple/go/bin/goreman &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt;  Procfile start
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;6查看集群列表&quot;&gt;6.查看集群列表&lt;/h4&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ETCDCTL_API&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./etcdctl member list
8211f1d0f64f3269: &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;infra1 &lt;span class=&quot;nv&quot;&gt;peerURLs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:12380 &lt;span class=&quot;nv&quot;&gt;clientURLs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:2379 &lt;span class=&quot;nv&quot;&gt;isLeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false
&lt;/span&gt;91bc3c398fb3c146: &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;infra2 &lt;span class=&quot;nv&quot;&gt;peerURLs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:22380 &lt;span class=&quot;nv&quot;&gt;clientURLs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:22379 &lt;span class=&quot;nv&quot;&gt;isLeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true
&lt;/span&gt;fd422379fda50e48: &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;infra3 &lt;span class=&quot;nv&quot;&gt;peerURLs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:32380 &lt;span class=&quot;nv&quot;&gt;clientURLs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:32379 &lt;span class=&quot;nv&quot;&gt;isLeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sun, 02 Jun 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/ETCD/</link>
        <guid isPermaLink="true">http://localhost:4000/ETCD/</guid>
        
        
        <category>后端</category>
        
      </item>
    
      <item>
        <title>5个方法助你行云流水写脚本</title>
        <description>&lt;p&gt;作为一名有理想的程序员，我们或多或少都会写一些 &lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt; 脚本，它们可能很短，只有简单的几个命令，也可能非常长，包含了系统检查、编译和运行等多个庞大复杂的任务&lt;/p&gt;

&lt;p&gt;在安装软件的时候，你一定见过很多名为&lt;code class=&quot;highlighter-rouge&quot;&gt;configure&lt;/code&gt; 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt; 脚本，这个脚本可以保证软件不会破坏当前系统，并且拥有可以正常安装的环境配置，实现这个脚本需要很多的逻辑和技巧。作为一名使用了多年 &lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt; 脚本的老司机，我积累了大量关于 &lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt; 脚本的使用技巧来提高脚本编写效率，今天，我将其中的一些精华分享出来，希望能对一些人有所帮助&lt;/p&gt;

&lt;h2 id=&quot;初次接触脚本&quot;&gt;初次接触脚本&lt;/h2&gt;
&lt;p&gt;刚开始的时候，我的脚本就是一系列的命令，像流水账一样，一般用来节省写多个标准 &lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt; 语句的时间。比如发布一个  &lt;code class=&quot;highlighter-rouge&quot;&gt;web&lt;/code&gt; 网站，其中一个任务就是把静态文件解压到 &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx&lt;/code&gt; 目录，脚本大概长这样&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cp &lt;/span&gt;static_file.tar.gz /usr/nginx/home/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/nginx/home/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-zxvf&lt;/span&gt; static_file.tar.gz
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;这个脚本当然节省了很多的时间，但从长远来看，这并不是一个很有用的脚本。过了一段时间，我学会了一些其他的方式来写脚本，并用来完成更有挑战性的任务，比如创建一个软件包，安装软件或者备份一个文件服务器等&lt;/p&gt;

&lt;h2 id=&quot;1-条件语句&quot;&gt;1. 条件语句&lt;/h2&gt;
&lt;p&gt;就像其他的变成语言一样，条件判断是一个易用且强大的语法。条件语句可以让我们的程序按照一定的逻辑执行。我的每个脚本几乎都用到了条件语句&lt;/p&gt;

&lt;p&gt;最基本的条件语句使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; 标记。&lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; 语句可以对一些条件进行判断，我们可以根据判断的结果来决定脚本的走向。例如，我们可以检查 &lt;code class=&quot;highlighter-rouge&quot;&gt;java bin&lt;/code&gt; 目录是否存在，如果存在，就代表 &lt;code class=&quot;highlighter-rouge&quot;&gt;java&lt;/code&gt; 已经正常安装，然后我们可以利用脚本，将 &lt;code class=&quot;highlighter-rouge&quot;&gt;java&lt;/code&gt; 的运行目录放到 &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt; 环境变量中，这样我们就可以在任意一个文件目录下运行 &lt;code class=&quot;highlighter-rouge&quot;&gt;java&lt;/code&gt; 命令了&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JAVA_HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/bin&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JAVA_HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/bin;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; 条件判断还有一些高级的用法，比如我想判断一个目录是否存在，不存在则创建&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;[ -d &quot;$1&quot; ] || mkdir --parent &quot;$1&quot;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;2-执行权限控制&quot;&gt;2. 执行权限控制&lt;/h2&gt;
&lt;p&gt;也许我们会想让脚本只能由特定的用户执行。尽管 &lt;code class=&quot;highlighter-rouge&quot;&gt;linux&lt;/code&gt; 已经有了用户和组的权限控制，但还是想让脚本来控制。比如可以使用脚本来控制只能是当前 &lt;code class=&quot;highlighter-rouge&quot;&gt;web&lt;/code&gt; 容器的所有者才能执行，或者只有 &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt; 用户才能执行。&lt;code class=&quot;highlighter-rouge&quot;&gt;linux&lt;/code&gt;系统给我们提供了两个环境变量去实现这个功能，其中一个是 &lt;code class=&quot;highlighter-rouge&quot;&gt;$USER&lt;/code&gt; ，获取当前用户名。另一个是 &lt;code class=&quot;highlighter-rouge&quot;&gt;$UID&lt;/code&gt; 获取当前用户的唯一标记&lt;/p&gt;

&lt;h4 id=&quot;普通用户&quot;&gt;普通用户&lt;/h4&gt;
&lt;p&gt;在一个多用户，多应用的环境中，下面的示例展示了如何限制，只有 &lt;code class=&quot;highlighter-rouge&quot;&gt;apple&lt;/code&gt; 这个用户才可以执行这个脚本。 &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; 语句可以理解为向用户提问：”执行的用户是不是 不是apple ?”。 如果发现执行人就是 &lt;code class=&quot;highlighter-rouge&quot;&gt;apple&lt;/code&gt;，第一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; 就会被执行，后边紧跟着一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;exit 1&lt;/code&gt;，意味着结束脚本执行&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$USER&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'apple'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;此脚本只能由 apple 执行&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;继续执行脚本&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;root-用户&quot;&gt;ROOT 用户&lt;/h4&gt;
&lt;p&gt;第二个例子展示了，只有 &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt; 用户才能执行此脚本。因为 &lt;code class=&quot;highlighter-rouge&quot;&gt;UID&lt;/code&gt; 为 &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; 的就是 &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt; 用户，我们可以在判断时使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-gt&lt;/code&gt; 扩展选项来禁止所有 &lt;code class=&quot;highlighter-rouge&quot;&gt;UID&lt;/code&gt; 大于 &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; 的用户继续执行脚本&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$UID&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-gt&lt;/span&gt; 0 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;此脚本只能由 root执行&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;继续执行脚本&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;使用参数&quot;&gt;使用参数&lt;/h2&gt;
&lt;p&gt;和任何可以执行的文件一样，脚本文件也可以接受参数。下边会展示一些参数传递的例子。&lt;strong&gt;但一定要注意，要写好代码，不仅要让程序执行我们想要执行的任务，也要保证程序不要执行我们不想执行的任务&lt;/strong&gt;。我一般在脚本中会确保在用户没有参数传递进来的时候不做任何事情。因此，我写脚本的第一件事就是使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;$#&lt;/code&gt; 检查脚本的参数是否传递&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;if [ $# -eq 0 ] ; then
    echo &quot;参数错误&quot;
    exit 1
fi
echo &quot;获得了参数: $#&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;多个参数&quot;&gt;多个参数&lt;/h4&gt;
&lt;p&gt;可以在命令行中传递多个参数给脚本， 脚本中对于用户提供的变量提供了很简单的获取方式，以 &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt; 符号开头，按照参数递增，例如 &lt;code class=&quot;highlighter-rouge&quot;&gt;$1 $2 $3&lt;/code&gt; 等。 下边的例子是打印用户输入的三个参数。当然，我们还必须要注意根据参数传递的数量做不同的处理。&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;看了上面的代码，你也许会问：是不是跳过了 &lt;code class=&quot;highlighter-rouge&quot;&gt;$0&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;嗯。。。是的，因为 &lt;code class=&quot;highlighter-rouge&quot;&gt;$0&lt;/code&gt; 在脚本中也是一个非常有用的变量，他代表我们执行的脚本的名称&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;对于这个参数的一个非常重要的应用就是在脚本中生成一个包含脚本名称的日志。最简单的例子大概如下&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;echo test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;.log
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;上边只是最简单使用，一般在使用时需要加上一些逻辑判断，比如判断文件位置是否可写等&lt;/p&gt;
&lt;h2 id=&quot;4-用户输入&quot;&gt;4. 用户输入&lt;/h2&gt;
&lt;p&gt;另外一个非常有用的功能就是在脚本执行的时候让用户输入一些信息，如下&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;请输入一个字母: &quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;word
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$word&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;这样就可以让用户在执行脚本的时候进行判断&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;read -p &quot;是否安装此软件? [Y/n]: &quot; answ
    if [ &quot;$answ&quot; == ’n' ] ; then
        exit 1
    fi
        echo &quot;开始安装软件&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;异常退出&quot;&gt;异常退出&lt;/h2&gt;
&lt;p&gt;几年之前，我写了一个脚本去安装最新版本的 &lt;code class=&quot;highlighter-rouge&quot;&gt;jdk&lt;/code&gt; ，这个脚本的基本流程就是解压 &lt;code class=&quot;highlighter-rouge&quot;&gt;jdk&lt;/code&gt; 包到指定的目录，更新 &lt;code class=&quot;highlighter-rouge&quot;&gt;jdk&lt;/code&gt; 的软链，然后使用一些其他的方式让系统识别这个新版本。这就需要考虑一个问题，如果我解压 &lt;code class=&quot;highlighter-rouge&quot;&gt;jdk&lt;/code&gt; 包失败了，继续执行脚本就会破坏我之前安装的 &lt;code class=&quot;highlighter-rouge&quot;&gt;jdk&lt;/code&gt; 环境。所以我的脚本一定要能解决这种问题，也就是说只有解压成功才继续执行脚本，大概的源码如下&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;tar kxzmf jdk-8-linux-x64.tar.gz -C /home/apple/jdk --checkpoint=.500; ec=$?
if [$ec -ne 0 ] ; then
    echo &quot;安装 jdk 失败&quot;
    exit 1
fi
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;识别系统命令执行出错最简单的方法时使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;$?&lt;/code&gt; 变量，如下例&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;ls T; ec=$?; echo $ec
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;我们如果先执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;touch T&lt;/code&gt; 然后执行上边的脚本，&lt;code class=&quot;highlighter-rouge&quot;&gt;ec&lt;/code&gt; 会是 &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;。然后删除 &lt;code class=&quot;highlighter-rouge&quot;&gt;T&lt;/code&gt; 文件，调用 &lt;code class=&quot;highlighter-rouge&quot;&gt;rm T&lt;/code&gt; 。再次执行脚本，&lt;code class=&quot;highlighter-rouge&quot;&gt;ec&lt;/code&gt; 会变成 &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt;，因为 &lt;code class=&quot;highlighter-rouge&quot;&gt;T&lt;/code&gt; 文件没有找到，系统会抛出一个为 &lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt; 的错误标记&lt;/p&gt;

&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;在一些稍微复杂写的场景，我们可能就会想要用一些比较高级的语言实现，类似 &lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;C&lt;/code&gt; 或者 &lt;code class=&quot;highlighter-rouge&quot;&gt;Java&lt;/code&gt;。其实很时候完全没有必要。&lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt; 脚本非常强大，有很多值得学习和使用的东西。我希望通过上边的简单介绍能让刚刚使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt; 并准备放弃的人了解到 一点 &lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt; 的强大及魅力&lt;/p&gt;
</description>
        <pubDate>Mon, 20 May 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/5%E4%B8%AA%E6%96%B9%E6%B3%95%E5%8A%A9%E4%BD%A0%E8%A1%8C%E4%BA%91%E6%B5%81%E6%B0%B4%E5%86%99%E8%84%9A%E6%9C%AC/</link>
        <guid isPermaLink="true">http://localhost:4000/5%E4%B8%AA%E6%96%B9%E6%B3%95%E5%8A%A9%E4%BD%A0%E8%A1%8C%E4%BA%91%E6%B5%81%E6%B0%B4%E5%86%99%E8%84%9A%E6%9C%AC/</guid>
        
        
        <category>后端</category>
        
      </item>
    
  </channel>
</rss>
